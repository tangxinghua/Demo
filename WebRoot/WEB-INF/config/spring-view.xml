<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 注解支持:主要作用于@Controller激活该模式下面是一种简写形式 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter， 
		是spring MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven>
		<!-- 设定字符集和json处理类 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 方式一：自动对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.demo.test.springmvc.*">
		<!-- 允许定义过滤器将基包下的某些类纳入或排除 <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>
	
	<!-- 拦截器 -->
	<!-- <mvc:interceptors>
		<bean class="com.demo.test."></bean>
	</mvc:interceptors> -->

	<!--通用视图解析器 -->
	<bean id="viewResolverCommon"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView" 
			/> -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="prefix" value="/jsp/springmvc/" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="order" value="1" />
	</bean>

	<!-- 配置FreeMark视图解析器 -->
	<bean id="freeMarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="suffix" value=".ftl" />
		<property name="cache" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
		<property name="requestContextAttribute" value="rc" />
		<property name="order" value="0" />
	</bean>

	<!-- 配置JSON视图
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
		<property name="objectMapper">
			<bean class="org.codehaus.jackson.map.ObjectMapper">
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg index="0" type="java.lang.String"
							value="yyyy-MM-dd HH:mm:ss" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="requestMappingHandlerAdapter"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
				<ref bean="stringHttpMessageConverter" />
			</list>
		</property>
	</bean> -->


	<!-- 文件上传配置注意:这里申明的id必须为multipartResolver
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="500000" />
	</bean> -->

	<!-- 简单的异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 此例只对上传异常做了处理，映射目录为/jsp/springmvc/error/upload_error.jsp -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/upload_error</prop>
			</props>
		</property>
	</bean>

	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/images/**" location="/images/"
		cache-period="31556926" />

	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />

	<mvc:resources mapping="/css/**" location="/css/"
		cache-period="31556926" />

	<mvc:resources mapping="/upload/**" location="/upload/"
		cache-period="31556926" />
		
	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<!-- <mvc:default-servlet-handler /> -->

</beans>